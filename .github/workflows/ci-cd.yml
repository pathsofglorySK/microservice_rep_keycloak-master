name: CI/CD pipline

on:
  push:
    branches: [ "master" ]

jobs:
  test-app-order:
    name: Run app_order tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare unit tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r ./app_order/requirements.txt

      - name: Run unit tests
        run: |
          python -m pytest ./tests/unit
        working-directory: ./app_order

      - name: Run integration tests
        run: |
          python -m pytest ./tests/integration
        working-directory: ./app_order

  test-app-person:
    name: Run app_person tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare unit tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r ./app_person/requirements.txt

      - name: Run unit tests
        run: |
          python -m pytest ./tests/unit
        working-directory: ./app_person


      - name: Run integration tests
        run: |
          python -m pytest ./tests/integration
        working-directory: ./app_person
  
  build-and-push-to-dh:
    name: Build and push to DockerHub
    needs: [ test-app-order ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build docker app_delivery image
        run: |
          docker build ./app_order -f ./app_order/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/app_order:latest

      - name: Login to DockerHub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Build and push app_order service image
        run: |
          docker push pathsofglory228/app_order:latest
    
  build-and-push-to-yc:
    name: Build and push to YandexCloud Registry
    needs: [ test-app-person ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image
        run: |
          docker build ./app_person -f ./app_person/Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/pathsofglory228/delivery_service/app_person:latest

      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Push tag YC Registry
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/pathsofglory228/delivery_service/app_person:latest


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build-and-push-to-yc ]
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/pathsofglory228/delivery_service/app_person:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
          revision-env: |
            POSTGRES_URL_ORD=postgresql://secUREusER:StrongEnoughPassword)@51.250.26.59:5432/kislukhin_microservice_db_order
            POSTGRES_URL_PER=postgresql://secUREusER:StrongEnoughPassword)@51.250.26.59:5432/kislukhin_microservice_db_person
            AMQP_URL=amqp://guest:guest123@51.250.26.59:5672/
            
            
            
            
            
            


